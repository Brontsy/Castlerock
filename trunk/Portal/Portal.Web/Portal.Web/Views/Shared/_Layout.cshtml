@model Portal.Web.Models.PageViewModel
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link href="@Url.Content("/content/less/site.less")" rel="stylesheet" type="text/css" />
    
    @*<link href='http://fonts.googleapis.com/css?family=Signika:400,700,600,300' rel='stylesheet' type='text/css'>*@

@*    <script src="@Url.Content("~/Content/Scripts/mootools.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/mootools-more.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/File.Upload.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/Image.Upload.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/NavigationItem.js")" type="text/javascript"></script>*@
    
    <script src="@Url.Content("/content/scripts/jquery-1.8.1.js")" type="text/javascript"></script>
    <script src="@Url.Content("/content/scripts/jquery-ui-1.8.23.js")" type="text/javascript"></script>
    <script src="@Url.Content("/content/scripts/jquery.validate.js")" type="text/javascript"></script>
    <script src="@Url.Content("/content/scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
    <script src="@Url.Content("/content/scripts/validation.js")" type="text/javascript"></script>
    <script src="@Url.Content("/content/scripts/file-upload.js")" type="text/javascript"></script>

</head>

<body>

<div class="wrapper">

<div class="page">

    <header>

        <a href="/">@Model.WebsiteName</a>

        <ul class="navigation">

            @if (Model.IsLoggedIn)
            {
                foreach (Portal.Web.Models.ComponentViewModel component in Model.Components)
                {
                    System.Web.Mvc.MvcHtmlString cssClass = new System.Web.Mvc.MvcHtmlString((component.IsSelected ? " class=\"selected\"" : string.Empty));
                    <li @cssClass>
                        <a href="@component.Url">@component.Name</a>
                    </li>
                }
                <li>
                    @Html.RouteLink("Logout", "Logout")
                </li>
            }
            else
            {
            <li class="selected">
                @Html.RouteLink("Login", "Login")
            </li>
            }

        </ul>

    </header>

    <div class="content">

        @{Html.RenderPartial("Messages/Confirmation");}
        @{Html.RenderPartial("Messages/Error");}

        @RenderBody()

    </div>

    <footer>
        @RenderSection("footer", false)
    </footer>

</div>
    
</div>

</body>
</html>

<script type="text/javascript">




    $(document).ready(function () {


        $('.tooltip-toggle').on('click', function (event) {
            event.preventDefault();

            jQuery.each($('.tooltip-toggle.selected'), function (index, element) {
                if (element != $(this)) {
                    $(element).removeClass('selected');
                }
            }, this);

            jQuery.each($('.tooltip'), function (index, element) {
 
                if ($(element).data('tooltip') != $(this).data('tooltip')) {
                    $(element).addClass('hidden');
                }
            }, this);

            $(this).toggleClass('selected');

            var element = $('[data-tooltip="' + $(this).data('tooltip') + '"]');

            $(element).toggleClass('hidden');

            $('#FolderName').focus();
        });

    });




/*
    window.addEvent('domready', function () {

        $$('button').addEvent('click', function () {
            this.addClass('disabled');
            var div = this.getElement('div');

            div.set('html', GetButtonText(div.get('html')));
        });

        $$('.tooltip-toggle').addEvent('click', function (event) {
            event.stop();
            $$('.tooltip-toggle.selected').each(function (element) {
                if (element != this) {
                    element.removeClass('selected');
                }
            }, this);

            $$('.tooltip').each(function (element) {
                if (element.get('data-tooltip') != this.get('data-tooltip')) {
                    element.addClass('hidden');
                }
            }, this);

            this.toggleClass('selected');

            var element = $$('[data-tooltip="' + this.get('data-tooltip') + '"]');

            element.toggleClass('hidden');
        });

        $$('body').addEvent('click', function (event) {

            if (event.target.getParent('.tooltip')) {
            }
            else {
                $$('.tooltip-toggle').removeClass('selected');
                $$('.tooltip').addClass('hidden');
            }
        });
    });

    function GetButtonText(buttonText) {

        if (buttonText == 'Save') {
            return 'Saving';
        }

        if (buttonText == 'Add Folder') { return 'Adding'; }

        if (buttonText == 'Create') {
            return 'Creating';
        }

        return buttonText;
    }
    */
</script>