@model Portal.Web.Areas.FileManager.Models.FileManagerPageViewModel
@{
    ViewBag.Title = "File Manager";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<ul class="sub-navigation">
    <li>
        <a href="/File-Manager/Folder/New" class="add-folder tooltip-toggle button white-arrow" data-tooltip="new-folder">Add folder</a>
    </li>
</ul>



<div style="float: right; width: 500px; overflow: hidden;">

    <div class="hidden tooltip add-folder-tooltip" data-tooltip="new-folder" data-focus="new-folder-textbox" id="myid">
    
        @using (Html.BeginRouteForm(Model.NewFolderRouteName, Model.CurrentStorageItemRouteValues, FormMethod.Post, new { }))
        {
            <fieldset>
                <ul>
                    <li>
                        <label for="FolderName">Folder Name</label>
                        <input type="text" name="FolderName" id="FolderName" class="new-folder-textbox" />

                    </li>
                    <li>
                        <button type="submit"><div>Add Folder</div></button>
                    </li>
                </ul>
            </fieldset>
        }
    </div>

</div>

<div class="content-padding">


<ul class="files">
    <li>
        @Html.RouteLink("back", "FileManager-View", Model.ParentFoldersRouteValues, new { @class = "back-folder" })
    </li>
    
    @{Html.RenderPartial("StorageItems", Model.StorageItems);}

</ul>


</div>


<script type="text/javascript">
    window.addEvent('domready', function () {
        new FileUpload('content', '@(Model.CurrentStorageItemId.HasValue ? Model.CurrentStorageItemId.Value.ToString() : string.Empty)');

//        $$('.tooltip-toggle').addEvent('click', function (event) {
//            event.stop();

//            var element = $$('.tooltip:[data-tooltip="' + this.get('data-tooltip') + '"');

//            element.toggleClass('hidden');
//            alert(element);

//            //alert(element.getElements(element.get('data-focus')).get('class')); //('label').focus();
//            //element.getChildren(element.get('data-focus'))[0].focus();

//            //element.getElements(element.get('data-focus')).focus()

//            document.id('FolderName').focus();
//        });

        $$('.folder, .file').addEvent('mouseover', function (event) {
            this.getElement('a.remove').removeClass('hidden');
        });

        $$('.folder, .file').addEvent('mouseleave', function (event) {
            this.getElement('a.remove').addClass('hidden');
        });

    });
</script>